# はじめのprintf
「**++xpp」は、括弧で順序を明示すると「**(++xpp)」となる。今、
xp[0] = &x[3] = "first"
xp[1] = &x[2] = "point"
xp[2] = &x[1] = "new"
xp[3] = &x[0] = "enter"
となっている。「xpp」は今「xp[0]」のポインタとなっており、「++xpp」は「xp[1]」のポインタとなる。これに参照外しをすると「xp[1]」となり、これは「x[2]」のポインタとなる。これに参照外しをすると「x[2]」で、これは"point"の先頭へのポインタである。よって、「point」が出力される。

# 2番目のprintf
「++xpp」は「xp[2]」のポインタとなる。これに参照外しをすると「xp[2]」となり、これは「x[1]」へのポインタとなる。これにデクリメントをすると「x[0]」へのポインタとなる。これに参照外しをするとこれは"enter"の先頭へのポインタである。これに3を足すと、"enter"の4文字目へのポインタとなり、"er"を表すようになる。よって、「er 」が出力される。

# 3番目のprintf
今「xpp」は「xp[2]」へのポインタを指しているので、「xpp[-2]」は「xp[0]」となり、これは「x[3]」へのポインタである。これに参照外しをすると"first"の先頭へのポインタとなる。これに3を足すと、"first"の4文字目へのポインタとなり、"st"を表すようになる。よって、「st」が出力される。

# 4番目のprintf

今「xpp」は「xp[2]」へのポインタを指しているので、「xpp[-1]」は「xp[1]」となる。これにデクリメントをすると、「x[1]」へのポインタとなる。これに参照外しをすると、"new"の先頭へのポインタとなる。これにインクリメントをすると、"new"の2文字目へのポインタとなり、"ew"を表すようになる。よって、「ew」が出力される。
